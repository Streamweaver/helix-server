# Generated by Django 3.0.14 on 2023-03-09 08:45

from django.db import migrations


class Migration(migrations.Migration):

    def fix_migration(apps, schema_editor):

        Event = apps.get_model('event', 'Event')
        DisasterType = apps.get_model('event', 'DisasterType')
        DisasterSubType = apps.get_model('event', 'DisasterSubType')
        DisasterSubCategory = apps.get_model('event', 'DisasterSubCategory')
        Figure = apps.get_model('entry', 'Figure')

        # Taken from github issue
        # https://github.com/idmc-labs/helix2.0-meta/issues/324
        old_event_ids = [
            11,
            137,
            156,
            508,
            653,
            1134,
            1485,
            1594,
            1592,
            11839,
            1835,
            11840,
            11841,
            11842,
            1958,
            11843,
            11844,
            11845,
            11846,
            2750,
            2834,
            2764,
            4636,
            6412,
            4028,
            4043,
            4044,
            4045,
            4244,
            3290,
            6062,
            7598,
            6789,
            9715,
            9464,
            10593,
            9819,
            9820,
            9885,
            9821,
            9818,
            9902,
            9903,
            9904,
            9886,
            9905,
            231,
            11673,
            11832,
            11833,
            11847,
            11831,
            11834,
            11835,
            11837,
            11836,
            11838,
            11945,
            11830,
            9884,
            12267,
            12532,
        ]


        event_qs = Event.objects.filter(old_id__in=old_event_ids)
        if event_qs.count() == 0:
            # Skip migration if there are no events in the system
            print('Skipping data migration...')
            return

        extreme_temprature_type = DisasterType.objects.get(name='Extreme Temperature')
        cold_wave_sub_type = DisasterSubType.objects.get(name='Cold wave')
        meteorological_sub_category = DisasterSubCategory.objects.get(name='Meteorological')

        # Update event that were migrated wrong
        event_qs.update(
            disaster_type=extreme_temprature_type,
            disaster_sub_type=cold_wave_sub_type,
            disaster_sub_category=meteorological_sub_category,
        )
        # Update figures that were migrated wrong
        Figure.objects.filter(event__in=event_qs).update(
            disaster_type=extreme_temprature_type,
            disaster_sub_type=cold_wave_sub_type,
            disaster_sub_category=meteorological_sub_category,
        )


    dependencies = [
        ('event', '0030_auto_20230216_0726'),
    ]

    operations = [
        migrations.RunPython(fix_migration, reverse_code=migrations.RunPython.noop),
    ]

# Generated by Django 3.0.5 on 2020-10-19 07:58

import apps.entry.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone
import django_enumfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('version_id', models.CharField(blank=True, max_length=16, null=True, verbose_name='Version')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Source URL')),
                ('document', models.FileField(blank=True, null=True, upload_to='entry/documents', verbose_name='document')),
                ('article_title', models.TextField(verbose_name='Article Title')),
                ('source', models.CharField(max_length=256, verbose_name='Source')),
                ('publisher', models.CharField(max_length=256, verbose_name='Publisher')),
                ('publish_date', models.DateField(verbose_name='Published Date')),
                ('source_methodology', models.TextField(blank=True, null=True, verbose_name='Source Methodology')),
                ('source_excerpt', models.TextField(blank=True, null=True, verbose_name='Excerpt from Source')),
                ('source_breakdown', models.TextField(blank=True, null=True, verbose_name='Source Breakdown and Reliability')),
                ('idmc_analysis', models.TextField(null=True, verbose_name='IDMC Analysis')),
                ('methodology', models.TextField(null=True, verbose_name='Methodology')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32, verbose_name='Tag'), blank=True, null=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Figure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('version_id', models.CharField(blank=True, max_length=16, null=True, verbose_name='Version')),
                ('district', models.TextField(verbose_name='District(s)')),
                ('town', models.CharField(max_length=256, verbose_name='Town/Village')),
                ('quantifier', django_enumfield.db.fields.EnumField(enum=apps.entry.models.Figure.QUANTIFIER)),
                ('reported', models.PositiveIntegerField(verbose_name='Reported Figures')),
                ('unit', django_enumfield.db.fields.EnumField(default=0, enum=apps.entry.models.Figure.UNIT)),
                ('household_size', models.PositiveSmallIntegerField(default=1, verbose_name='Household Size')),
                ('total_figures', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total Figures')),
                ('term', django_enumfield.db.fields.EnumField(default=0, enum=apps.entry.models.Figure.TERM)),
                ('type', django_enumfield.db.fields.EnumField(default=0, enum=apps.entry.models.Figure.TYPE)),
                ('role', django_enumfield.db.fields.EnumField(default=0, enum=apps.entry.models.Figure.ROLE)),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('include_idu', models.BooleanField(verbose_name='Include in IDU')),
                ('excerpt_idu', models.TextField(blank=True, null=True, verbose_name='Excerpt for IDU')),
                ('is_disaggregated', models.BooleanField(default=False, verbose_name='Is disaggregated')),
                ('displacement_urban', models.PositiveIntegerField(blank=True, null=True, verbose_name='Displacement/Urban')),
                ('displacement_rural', models.PositiveIntegerField(blank=True, null=True, verbose_name='Displacement/Rural')),
                ('location_camp', models.PositiveIntegerField(blank=True, null=True, verbose_name='Location/Camp')),
                ('location_non_camp', models.PositiveIntegerField(blank=True, null=True, verbose_name='Location/Non-Camp')),
                ('sex_male', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sex/Male')),
                ('sex_female', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sex/Female')),
                ('age_json', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Age'), blank=True, null=True, size=None, verbose_name='Age Disaggregation')),
                ('strata_json', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Stratum'), blank=True, null=True, size=None, verbose_name='Strata Disaggregation')),
                ('conflict', models.PositiveIntegerField(blank=True, null=True, verbose_name='Conflict/Conflict')),
                ('conflict_political', models.PositiveIntegerField(blank=True, null=True, verbose_name='Conflict/Violence-Political')),
                ('conflict_criminal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Conflict/Violence-Criminal')),
                ('conflict_communal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Conflict/Violence-Communal')),
                ('conflict_other', models.PositiveIntegerField(blank=True, null=True, verbose_name='Other')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SourcePreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('version_id', models.CharField(blank=True, max_length=16, null=True, verbose_name='Version')),
                ('url', models.URLField(verbose_name='Source URL')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='source/previews', verbose_name='Rendered Pdf')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
